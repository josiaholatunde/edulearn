{"ast":null,"code":"var _jsxFileName = \"/Users/oogunboyejo/Documents/uol/project_app/edulearn/client/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { showNotification } from '../utils/showNotification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  authedUser,\n  isUserLoggedIn,\n  component: Component,\n  ...rest\n}) => {\n  console.log('Authed user ', isUserLoggedIn);\n  if (!isUserLoggedIn) {\n    showNotification('danger', 'You are not authorized to access this route');\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      return !!isUserLoggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: props.location\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = PrivateRoute;\nconst mapStateToProps = ({\n  authedUser\n}) => ({\n  authedUser: authedUser && authedUser.user,\n  isUserLoggedIn: authedUser && authedUser.token\n});\nexport default connect(mapStateToProps)(PrivateRoute);\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Redirect","Route","connect","showNotification","jsxDEV","_jsxDEV","PrivateRoute","authedUser","isUserLoggedIn","component","Component","rest","console","log","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","state","location","_c","mapStateToProps","user","token","$RefreshReg$"],"sources":["/Users/oogunboyejo/Documents/uol/project_app/edulearn/client/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react'\nimport {  Redirect, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { showNotification } from '../utils/showNotification'\n\nconst PrivateRoute = ({ authedUser, isUserLoggedIn, component: Component, ...rest}) => {\n\n    console.log('Authed user ', isUserLoggedIn)\n    if (!isUserLoggedIn) {\n        showNotification('danger', 'You are not authorized to access this route')\n    }\n    return (\n        <Route {...rest} render={props => {\n           return !!isUserLoggedIn ? (\n                <Component { ...props}  />\n            ) : (\n                <Redirect to={{\n                    pathname: '/login', state: props.location\n                }} />  \n            )\n        }}/>\n    )\n}\n\nconst mapStateToProps = ({ authedUser }) => ({\n    authedUser: authedUser && authedUser.user,\n    isUserLoggedIn: authedUser && authedUser.token\n})\nexport default connect(mapStateToProps)(PrivateRoute)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAUC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,gBAAgB,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEC,cAAc;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAI,CAAC,KAAK;EAEnFC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,cAAc,CAAC;EAC3C,IAAI,CAACA,cAAc,EAAE;IACjBL,gBAAgB,CAAC,QAAQ,EAAE,6CAA6C,CAAC;EAC7E;EACA,oBACIE,OAAA,CAACJ,KAAK;IAAA,GAAKU,IAAI;IAAEG,MAAM,EAAEC,KAAK,IAAI;MAC/B,OAAO,CAAC,CAACP,cAAc,gBAClBH,OAAA,CAACK,SAAS;QAAA,GAAMK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAE1Bd,OAAA,CAACL,QAAQ;QAACoB,EAAE,EAAE;UACVC,QAAQ,EAAE,QAAQ;UAAEC,KAAK,EAAEP,KAAK,CAACQ;QACrC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACP;IACL;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEZ,CAAC;AAAAK,EAAA,GAjBKlB,YAAY;AAmBlB,MAAMmB,eAAe,GAAGA,CAAC;EAAElB;AAAW,CAAC,MAAM;EACzCA,UAAU,EAAEA,UAAU,IAAIA,UAAU,CAACmB,IAAI;EACzClB,cAAc,EAAED,UAAU,IAAIA,UAAU,CAACoB;AAC7C,CAAC,CAAC;AACF,eAAezB,OAAO,CAACuB,eAAe,CAAC,CAACnB,YAAY,CAAC;AAAA,IAAAkB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}