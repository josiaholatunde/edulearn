{"ast":null,"code":"import axios from '../../utils/axiosConfig';\nimport { showLoading, hideLoading } from './shared';\nimport { addUser } from './userActions';\nimport { CLEAR_USER, CREATE_USER, LOGIN_USER, LOG_USER_OUT } from './types';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { showNotification } from '../../utils/showNotification';\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER';\nexport function setAuthedUser(id) {\n  return {\n    type: SET_AUTHED_USER,\n    id\n  };\n}\nexport function clearUserInLocalStorage() {\n  localStorage.setItem('user', null);\n  localStorage.setItem('token', null);\n}\nexport const handleLoginUser = (userToLogin, {\n  history\n}) => dispatch => {\n  dispatch(showLoading());\n  setTimeout(async () => {\n    try {\n      const {\n        data\n      } = await axios.post('/login', userToLogin);\n      if (data) {\n        const {\n          token,\n          user\n        } = data && data.data;\n        setAuthToken(token);\n        dispatch({\n          type: LOGIN_USER,\n          payload: {\n            user,\n            token\n          }\n        });\n        storeUserCredentialsInLocalStorage({\n          user,\n          token\n        });\n        showNotification('success', 'Successfully logged in user');\n        history.push('/dashboard');\n      }\n      dispatch(hideLoading());\n    } catch (error) {\n      dispatch(hideLoading());\n      let errorMessage = error.response && error.response.data.message;\n      showNotification('danger', errorMessage || 'An error occurred while logging in user');\n    }\n  }, 1000);\n};\nexport const handleRegisterUser = (userToRegister, {\n  history\n}) => dispatch => {\n  dispatch(showLoading());\n  setTimeout(async () => {\n    try {\n      const {\n        data\n      } = await axios.post('/register/voter', userToRegister);\n      if (data) {\n        const user = data.data;\n        dispatch({\n          type: CREATE_USER,\n          payload: user\n        });\n        dispatch(hideLoading());\n        showNotification('success', 'Registration was successful');\n        history.push('/login');\n      }\n    } catch (error) {\n      dispatch(hideLoading());\n      let errorMessage = error.response && error.response.data.message;\n      showNotification('danger', errorMessage || 'Error occurred while registering user');\n    }\n  }, 1000);\n};\nexport const storeUserCredentialsInLocalStorage = ({\n  user,\n  token\n}) => {\n  if (user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  if (token) {\n    localStorage.setItem('token', token);\n  }\n};\nexport const logOutUser = history => dispatch => {\n  dispatch({\n    type: LOG_USER_OUT\n  });\n  clearUserInLocalStorage();\n  history.push('/login');\n  showNotification('success', 'Successfully logged user out');\n};\nexport const logOutUserOnTokenExpiration = () => async dispatch => {\n  localStorage.setItem('user', null);\n  localStorage.setItem('token', null);\n  dispatch(logOutUser());\n  dispatch(handleClearUserState());\n};\nexport const handleClearUserState = function () {\n  return {\n    type: CLEAR_USER\n  };\n};","map":{"version":3,"names":["axios","showLoading","hideLoading","addUser","CLEAR_USER","CREATE_USER","LOGIN_USER","LOG_USER_OUT","setAuthToken","showNotification","SET_AUTHED_USER","setAuthedUser","id","type","clearUserInLocalStorage","localStorage","setItem","handleLoginUser","userToLogin","history","dispatch","setTimeout","data","post","token","user","payload","storeUserCredentialsInLocalStorage","push","error","errorMessage","response","message","handleRegisterUser","userToRegister","JSON","stringify","logOutUser","logOutUserOnTokenExpiration","handleClearUserState"],"sources":["/Users/oogunboyejo/Documents/uol/project_app/edulearn/client/src/redux/actions/authedActions.js"],"sourcesContent":["import axios from '../../utils/axiosConfig'\nimport { showLoading, hideLoading } from './shared';\nimport { addUser } from './userActions';\nimport { CLEAR_USER, CREATE_USER, LOGIN_USER, LOG_USER_OUT } from './types';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { showNotification } from '../../utils/showNotification';\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\n\nexport function setAuthedUser(id) {\n    return {\n        type: SET_AUTHED_USER,\n        id\n    }\n}\n\n\nexport function clearUserInLocalStorage() {\n    localStorage.setItem('user', null);\n    localStorage.setItem('token', null);\n}\n\n\nexport const handleLoginUser = (userToLogin, { history }) => dispatch => {\n    dispatch(showLoading())\n\n    setTimeout(async () => {\n        try {\n            const { data } = await axios.post('/login', userToLogin)\n            if (data) {\n                const { token, user } = data && data.data\n                setAuthToken(token);\n                dispatch({\n                    type: LOGIN_USER,\n                    payload: {\n                        user,\n                        token\n                    }\n                })\n                storeUserCredentialsInLocalStorage({ user, token });\n                showNotification('success', 'Successfully logged in user')\n                history.push('/dashboard')\n            }\n            dispatch(hideLoading())\n        } catch (error) {\n            dispatch(hideLoading())\n            let errorMessage = error.response && error.response.data.message;\n            showNotification('danger', errorMessage || 'An error occurred while logging in user')\n        }\n    \n    }, 1000)\n\n}\n\n\nexport const handleRegisterUser = (userToRegister, { history }) => dispatch => {\n    dispatch(showLoading())\n    setTimeout(async() => {\n        try {\n            const { data } = await axios.post('/register/voter', userToRegister)\n            if (data) {\n                const user = data.data\n                dispatch({ type: CREATE_USER, payload: user })\n                dispatch(hideLoading())\n                showNotification('success', 'Registration was successful')\n                history.push('/login')\n            }\n        } catch (error) {\n            dispatch(hideLoading())\n            let errorMessage = error.response && error.response.data.message;\n            showNotification('danger', errorMessage || 'Error occurred while registering user')\n        }\n    }, 1000)\n\n}\n\nexport const storeUserCredentialsInLocalStorage = ({ user, token }) => {\n    if (user) {\n        localStorage.setItem('user', JSON.stringify(user))\n    }\n    if (token) {\n        localStorage.setItem('token', token)\n    }\n}\n\nexport const logOutUser = (history) => dispatch => {\n    \n    dispatch({ type: LOG_USER_OUT });\n    clearUserInLocalStorage()\n    history.push('/login')\n    showNotification('success', 'Successfully logged user out')\n}\n\n\nexport const logOutUserOnTokenExpiration = () => async dispatch =>  {\n    localStorage.setItem('user', null)\n    localStorage.setItem('token', null)\n    dispatch(logOutUser())\n    dispatch(handleClearUserState())  \n}\n\n\nexport const handleClearUserState = function () {\n    return {\n        type: CLEAR_USER\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}